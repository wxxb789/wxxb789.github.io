:PROPERTIES:
:title: Watching @Karpathy's  "S... (highlights)
:author: [[waydegilliam on Twitter]]
:full-title: "Watching @Karpathy's  "S..."
:category: [[tweets]]
:url: https://twitter.com/waydegilliam/status/1663631626440671232
:END:

* Highlights first synced by [[Readwise]] [[2023-06-01]]
** Watching @karpathy's  "State of GPT" and thought I'd share some tips on doing retrieval augmentation that I've found effective with @LangChainAI ... üëá 

![](https://pbs.twimg.com/media/FxZieBwaIAADePN.jpg) ([View Tweet](https://twitter.com/waydegilliam/status/1663631626440671232))
** #1: Give the model a persona that includes the sought out expertise.

Example: "You are a senior business analyst who is an expert in strategic planning and creating mission, vision, and core value statements for organizations" ([View Tweet](https://twitter.com/waydegilliam/status/1663631628193906688))
** #2: Tell the model that it should only use the provided documents as context and provide citations.

Example: You many ONLY use the provided documents to provide your answer and you should always include a citation that is the document's Id where it is used in the answer. ([View Tweet](https://twitter.com/waydegilliam/status/1663631629443796993))
** #3: Use an example selector (see https://t.co/0WNVd8pqQT) to provide examples of expected prompts and correct responses.

Highly recommend using the Similarity, MMR, or NGram Overlap selectors to a) reduce # of examples and b) ensure the use of best examples based on prompt. ([View Tweet](https://twitter.com/waydegilliam/status/1663631630697922565))
** #4: Make your document embeddings based on text that is most similar to what your user's will be inputing. There is often a disconnect between human inputs and the documents you want to fetch. ([View Tweet](https://twitter.com/waydegilliam/status/1663631631989735425))
** #5: When splitting your text for embeddings, chunk them in sections of 150-200 tokens with an overlap of 0-30 tokens.

This represents an avg. paragraph in English, and assuming a paragraph is usually about a single subject this should improve vector based similarity search. ([View Tweet](https://twitter.com/waydegilliam/status/1663631633222885376))
** #6: I have found that sentence-transformers work just fine for embedding your documents with the benefit of being free and smaller/more efficient than OpenAI options. ([View Tweet](https://twitter.com/waydegilliam/status/1663631634598625280))
** That's it for now.  Let me know what you think and if you have any particular recommendations and/or tips I might have missed.

Cheers üçª ([View Tweet](https://twitter.com/waydegilliam/status/1663631635793977344))