* [10]Keywords
** abstract

Specifies that a class or method will be implemented later, in a
subclass
** assert

Assert describes a predicate (a true--false statement) placed in a Java
program to indicate that the developer thinks that the predicate is
always true at that place. If an assertion evaluates to false at
run-time, an assertion failure results, which typically causes execution
to abort.
** boolean

A data type that can hold True and False values only
** break

A control statement for breaking out of loops
** byte

A data type that can hold 8-bit data values
** case

Used in switch statements to mark blocks of text
** catch

Catches exceptions generated by try statements
** char

A data type that can hold unsigned 16-bit Unicode characters
** class

Declares a new class
** continue

Sends control back outside a loop
** default

Specifies the default block of code in a switch statement
** do

Starts a do-while loop
** double

A data type that can hold 64-bit floating-point numbers
** else

Indicates alternative branches in an if statement
** enum

A Java keyword used to declare an enumerated type. Enumerations extend
the base class.
** exports

Used in modular java to export a package with a module. This keyword is
only available in Java 9 and later.
** extends

Indicates that a class is derived from another class or interface
** final

Indicates that a variable holds a constant value or that a method will
not be overridden
** finally

Indicates a block of code in a try-catch structure that will always be
executed
** float

A data type that holds a 32-bit floating-point number
** for

Used to start a for loop
** if

Tests a true/false expression and branches accordingly
** implements

Specifies that a class implements an interface
** import

References other classes
** instanceof

Indicates whether an object is an instance of a specific class or
implements an interface
** int

A data type that can hold a 32-bit signed integer
** interface

Declares an interface
** long

A data type that holds a 64-bit integer
** module

The module keyword is used to declare a module inside of a Java
application. This keyword is only available in Java 9 and later.
** native

Specifies that a method is implemented with native (platform-specific)
code
** new

Creates new objects
** null

Indicates that a reference does not refer to anything
** package

Declares a Java package
** private

An access specifier indicating that a method or variable may be accessed
only in the class it's declared in
** protected

An access specifier indicating that a method or variable may only be
accessed in the class it's declared in (or a subclass of the class it's
declared in or other classes in the same package)
** public

An access specifier used for classes, interfaces, methods, and variables
indicating that an item is accessible throughout the application (or
where the class that defines it is accessible)
** requires

Used to specify the required libraries inside of a module.[14] This
keyword is only available in Java 9 and later.
** return

Sends control and possibly a return value back from a called method
** short

A data type that can hold a 16-bit integer
** static

Indicates that a variable or method is a class method (rather than being
limited to one particular object)
** strictfp

A Java keyword used to restrict the precision and rounding of floating
point calculations to ensure portability.
** super

Refers to a class's base class (used in a method or class constructor)
** switch

A statement that executes code based on a test value
** synchronized

Specifies critical sections or methods in multithreaded code
** this

Refers to the current object in a method or constructor
** throw

Creates an exception
** throws

Indicates what exceptions may be thrown by a method
** transient

Specifies that a variable is not part of an object's persistent state
** try

Starts a block of code that will be tested for exceptions
** var // TODO
** void

Specifies that a method does not have a return value
** volatile

Indicates that a variable may change asynchronously
** while

Starts a while loop
** const 不使用
** goto 不使用


#+begin_quote
  =true=, =false= and =null= look like keywords, but in actual they are
  literals. However they still can't be used as identifiers in a
  program.
#+end_quote