:PROPERTIES:
:title: readwise/Mastering ABP Framework
:END:


* metadata
:PROPERTIES:
:author: [[readwise.io]]
:full-title: "Mastering ABP Framework"
:category: [[articles]]
:url: https://readwise.io/reader/document_raw_content/5278921
:image-url: https://readwise-assets.s3.amazonaws.com/static/images/article3.5c705a01b476.png
:END:

* Highlights first synced by [[Readwise]] [[2023-12-22]]
** ðŸ“Œ [[2023-03-31]]
#+BEGIN_QUOTE
te 
#+END_QUOTE\
** ðŸ“Œ [[2023-03-31]]
#+BEGIN_QUOTE
This section will explore the fundamental modules pre-installed in the startup solution:
Account, Identity, and Tenant Management. 
#+END_QUOTE\
** ðŸ“Œ [[2023-03-31]]
#+BEGIN_QUOTE
The source code of these modules is not included in the download solution by default, but
they are freely available on GitHub. They are used as NuGet packages and easily upgraded
when a new ABP version is published. They are designed as highly customizable, without
touching their code. However, if you need, you can include their source code in your
solution to freely change them based on your unique requirements. 
#+END_QUOTE\
** ðŸ“Œ [[2023-03-31]]
#+BEGIN_QUOTE
Entities are defined in the Domain Layer of the solution, and the domain layer is split into
two projects within the solution:
â€¢   ProductManagement.Domain is used to define your entities, value objects, domain
services, repository interfaces, and other core domain-related classes.
â€¢   ProductManagement.Domain.Shared is used to define some primitive shared
types. The types defined in this project are available to all other layers. Typically, we
define enums and some constants here. 
#+END_QUOTE\
** ðŸ“Œ [[2023-03-31]]
#+BEGIN_QUOTE
AggregateRoot is a special type of entity that is used to create the root entity type of an
aggregate. An aggregate is a Domain-Driven Design (DDD) concept that we will discuss
in greater detail in the upcoming chapters. For now, consider that we inherit the main
entities from this class.
The AuditedAggregateRoot class adds some more properties to the
AggregateRoot class: CreationTime as DateTime, CreatorId as Guid,
LastModificationTime as DateTime, and LastModifierId as Guid.
ABP automatically sets these properties. For example, when you insert an entity into the
database, CreationTime is set to the current time, and CreatorId is automatically set
to the Id property of the current user. 
#+END_QUOTE\