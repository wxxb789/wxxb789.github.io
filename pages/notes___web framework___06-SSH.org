

* [06]SSH

** 1. Spring + Hibernate 整合

（一）Spring框架整合Hibernate: （1）配置方面
1.Spring框架用LocalSessionFactoryBean提供SessionFactory
对象，而不是Hibernate框架生成的HibernateSessionFactory。
2.LocalSessionFactoryBean以连接池作为自己的数据源 （2）编程方面
Spring框架提供了HibernateDaoSupport，通常将它作为DAO组件
开发的父类；HibernateDaoSupport有两个重要的属性： ①SessionFactory
sessionFactory; ②HibernateTemplate template;

（二）目前常用的数据库连接池产品
连接池是一个集合结构（比如：ArrayList/Vector），在集合
结构中存储若干个连接对象（已经连接上数据库），并随着访问
数据库的并发强度，来动态的调整连接池中连接对象的数量。
（1）c3p0（Hibernate默认使用的连接池技术） （2）dbcp
（Apache开源组织提供） （3）proxool （开源产品）

（三）c3p0连接池的伸缩性配置 参数说明：
initialPoolSize:连接池初始化时所创建的连接对象的数量；
maxPoolSize:最大连接对象的数量 minPoolSize:最小连接对象的数量
maxIdleTime:如果在设置时间内(秒)，连接对象没有被使用就被释放掉；
checkoutTimeout:获得连接所需的最长时间(毫秒)，如果超过这个时间会抛异常

（四）HibernateDaoSupport （1）SessionFactory属性
（2）HibernateTemplate属性

（五）ApplicationContext.xml配置
（1）注册一个创建SessionFactory对象的bean类 LocalSessionFactoryBean
（2）组件依赖关系的设定
UserServiceImpl-->HibernateUserDAO-->LocalSessionFactoryBean-->c3p0
（3）切面配置 ①普通切面:目的是跟踪目标对象的业务方法;
②事务切面:针对目标对象的业务方法实施事务管理;

一、事务概念（复习）Transaction(交易) (1)什么是事务？
对应底层的一组sql语句，形成一个不可分割的原子操作；如果这组
sql语句有一条执行失败，则一组的操作都被视为是失败的。 (2)如何构建事务？
构建事务，需要如下核心结构：(TransactionInterceptor) try{
tx.begin;//通过HibernateTransactionManager开启事务 sql1;//save(user)
sql2;//save(user2) ... sqln; tx.commit;
//HibernateTransactionManager#commit(); }catch(Exception ex){
tx.rollback;//HibernateTransactionManager#rollback(); }finally{
//关闭资源 } 二、Spring框架对事务的管理
（1）在配置文件中，添加"tx"名称空间，并指明该空间下的
约束定义文件（xsd） （2）配置事务的横切逻辑
①使用对应于Spring中TransactionInterceptor
②事务的横切逻辑又依赖于TransactionManager的具体对象，
该对象提供支持事务的连接对象，及事务的边界语句 (i)事务对象；
(ii)commit()、rollback()语句 ③配置事务属性，主要指明事务的传播策略：
（3）配置事务的切面（advice+pointcut）： ①使用标签 ②切面的标签：
专用于事务 ③配置顺序是固定的： ① 切入点 ② ③
（4）事务属性：隔离性、传播性(propagation)、只读性等 事务的传播策略
①REQUIRED (/) 支持当前事务， 如果当前没有事务，则创建新事务 ②SUPPORTS
(/查询) 支持当前事务， 如果当前没有事务，则不创建新事务 ③MANDATORY
支持当前事务； 如果当前没有事务，则抛异常 ④REQUIRES-NEW
如果当前没有事务，则创建一个新事物；
如果当前有事务，则将当前事务挂起，再创建一个新的事务； ⑤NOT-SUPPORTED
以非事务方式执行； 如果当前有事务，则将当前事务挂起。 ⑥NEVER
永远不需要事务，即以非事务方式执行； ⑦NESTED
如果当前有事务，则在事务内再创建事务； 如果当前没有事务，则创建事务。 三
Spring框架的事务管理方式: (1)编程式事务;
(2)声明式事务(①基于xml配置②基于注解配置)
** 2. Spirng + Struts2 整合

1.Spring框架与Struts2整合 （1）在web工程中利用MyEclipse工具添加整合类库:
build path->MyEclipse->Struts 2 Spring libraries 原理说明如下:
在该库中有如下两个重要的jar包: ①从Spring的角度，需要spring-web.jar;
核心类: org.springframework.web.context.ContextLoaderListener 继承:
public class ContextLoaderListener extends ContextLoader implements
ServletContextListener 目的:
使web容器能够加载applicationContext.xml;加载后，Spring框架
创建了SpringIoC容器，管理业务逻辑组件的创建、依赖关系及事务处理等；

#+begin_example
  ②从struts2的角度，需要struts-spring-plugin.jar插件
         核心类：
         org.apache.struts2.spring.StrutsSpringObjectFactory
                                   (插件容器)
         目的：
                  使用插件容器(StrutsSpringObjectFactory)代替Struts2默认容器
        (StrutsObjectFactory)，插件容器不仅可以创建Action对象，还可以
                  访问SpringIoC容器，为Action对象自动寻找和绑定业务组件，注入依赖关系。
        
                  
#+end_example

（2）在struts.xml文件中，配置Action自动装配的方式： ①默认是byName
因为在struts框架->struts2-core-2.1.8.1.jar->org.apache.struts2->
default.properties文件中的设置是： struts.objectFactory.spring.autoWire
= name ②通过标签设置成byTye方式:
同时需要在web.xml文件中注册RequestContextListener监听器解决IoC的问题
【总结】 S2SH的整合，即Struts2与Spring及Hibernate的整合 (1)整合的思想:
①Spring先和Hibernate整合，并测试成功； ②struts2再与整合好的SH进行整合；
(2)整合的主要步骤: ①创建Web工程; ②首先导入Hibernate类库,开发JavaBean;
③然后导入Spring类库;建立数据库的连接,开发Dao组件和业务组件;
④导入Struts2类库及其struts2和spring的整合类库,开发控制器和页面;