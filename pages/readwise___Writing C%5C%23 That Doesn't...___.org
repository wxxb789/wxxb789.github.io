:PROPERTIES:
:title: readwise/Writing C\# That Doesn't...
:END:


* metadata
:PROPERTIES:
:author: [[davidfowl on Twitter]]
:full-title: "Writing C\# That Doesn't..."
:category: [[tweets]]
:url: https://twitter.com/davidfowl/status/1686515549637955584
:image-url: https://pbs.twimg.com/profile_images/1599643600190836736/mWj6ARAN.jpg
:END:

* Highlights first synced by [[Readwise]] [[2023-12-22]]
** ðŸ“Œ [[2023-08-02]]
#+BEGIN_QUOTE
Writing C# that doesn't look like typical C# to parse JSON avoiding heap allocations (or using pooled allocs in some cases) (SpanAllocator is my own type). #dotnet #csharp 

![](https://pbs.twimg.com/media/F2e0sPjbQAUHsnH.jpg) 
#+END_QUOTE\
** ðŸ“Œ [[2023-08-02]]
#+BEGIN_QUOTE
Comparing the property name to a utf8 string literal means you don't need to materialize the string at all to understand which property is being parsed. The values are going to be using a stack allocated buffer if < 256 bytes, and will fall back to pooled arrays otherwise. 
#+END_QUOTE\