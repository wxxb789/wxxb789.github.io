* [04]JavaClass
** 1. String,StringBuilder与StringBuffer
*** 1.1. 可变性

简单的来说：String 类中使用 final
关键字修饰字符数组来保存字符串，=private　final　char　value[]=，所以
String 对象是不可变的。而StringBuilder 与 StringBuffer 都继承自
AbstractStringBuilder 类，在 AbstractStringBuilder
中也是使用字符数组保存字符串=char[] value=但是没有用 final
关键字修饰，所以这两种对象都是可变的。

StringBuilder 与 StringBuffer 的构造方法都是调用父类构造方法也就是
AbstractStringBuilder 实现的。
*** 1.2. 线程安全
:PROPERTIES:
:custom_id: 线程安全
:END:
String
中的对象是不可变的，也就可以理解为常量，线程安全。AbstractStringBuilder
是 StringBuilder 与 StringBuffer
的公共父类，定义了一些字符串的基本操作，如
expandCapacity、append、insert、indexOf 等公共方法。StringBuffer
对方法加了同步锁或者对调用的方法加了同步锁，所以是线程安全的。StringBuilder
并没有对方法进行加同步锁，所以是非线程安全的。
*** 1.3. 性能

每次对 String 类型进行改变的时候，都会生成一个新的 String
对象，然后将指针指向新的 String 对象。StringBuffer 每次都会对
StringBuffer
对象本身进行操作，而不是生成新的对象并改变对象引用。相同情况下使用
StringBuilder 相比使用 StringBuffer 仅能获得 10%~15%
左右的性能提升，但却要冒多线程不安全的风险。
*** 1.4. 总结

对于三者使用的总结：

1. 操作少量的数据: 适用String
2. 单线程操作字符串缓冲区下操作大量数据: 适用StringBuilder
3. 多线程操作字符串缓冲区下操作大量数据: 适用StringBuffer