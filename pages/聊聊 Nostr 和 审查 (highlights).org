:PROPERTIES:
:title: 聊聊 Nostr 和 审查 (highlights)
:author: [[陈皓]]
:full-title: "聊聊 Nostr 和 审查"
:category: #articles
:url: https://coolshell.cn/articles/22367.html
:END:

* Highlights first synced by [[Readwise]] [[2023-02-04]]
** 通讯过程

•   这个协议中有两个东西，一个是 client，一个是 relay，client 就是用户社交的客户端，relay 就是转发服务器。
•   用户不需要注册，用户只需要有一个密钥对（公钥+私钥）就好了，然后把要发的信息做签名，发给一组 relays
•   然后你的 Follower 就可以从这些 relays 上订阅到你的信息。 ([View Highlight](https://read.readwise.io/read/01grcew4fyaj1wn4qjc6xwr05d))
** 技术细节摘要

•   技术实现上，nostr 使用 websocket + JSON 的方式。其中主要是下面这么同个指令
    •   Client 到 Relay主要是下面这几个指令：
        •   `EVENT`。发出事件，可以扩展出很多很多的动作来，比如：发信息，删信息，迁移信息，建 Channel ……扩展性很好。
        •   `REQ`。用于请求事件和订阅更新。收到`REQ`消息后，relay 会查询其内部数据库并返回与过滤器匹配的事件，然后存储该过滤器，并将其接收的所有未来事件再次发送到同一websocket，直到websocket关闭。
        •   `CLOSE`。用于停止被 `REQ` 请求的订阅。
    •   Relay 到 Client 主要是下面几个指令：
        •   `EVENT`。用于发送客户端请求的事件。
        •   `NOTICE`。用于向客户端发送人类可读的错误消息或其他信息
•   关于 `EVENT` 下面是几个常用的基本事件：
    •   `0`: `set_metadata`：比如，用户名，用户头像，用户简介等这样的信息。
    •   `1`: `text_note`：用户要发的信息内容
    •   `2`： `recommend_server`：用户想要推荐给关注者的Relay的URL（例如`wss://somerelay.com`）

如何对抗网络审查

那么，这个协议是如何对抗网络审查的？

•   识别你的身份是通过你的签名，所以，只要你的私钥还在，你是不会被删号的
•   任何人都可以运行一个或多个relay，所以，就很难有人控制所有的relay
•   你还可以很方便的告诉其中的 relay 把你发的信息迁到另一个 relay 上
•   你的信息是一次发给多个relay的，所以，只要不是所有的热门realy封了你，你就可以发出信息
•   如果你被全部的relay封了，你还是可以自建你的relay，然后，你可以通过各种方式告诉你身边的人你的relay服务器是什么？这样，他们把这个relay服务器加到他们的client列表中，你又可以从社死中复活了。 ([View Highlight](https://read.readwise.io/read/01grcewpbeezkgrx39394wxbvk))