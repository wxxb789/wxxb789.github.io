:PROPERTIES:
:title: 🪄 INTRODUCING: Figma Cha... (highlights)
:author: [[pwang_szn on Twitter]]
:full-title: "🪄 INTRODUCING: Figma Cha..."
:category: [[tweets]]
:url: https://twitter.com/pwang_szn/status/1652443402892611584
:END:

* Highlights first synced by [[Readwise]] [[2023-05-01]]
** 🪄 INTRODUCING: Figma Chat Wizard

1) 🤖 Import design from @figma (with the help of @LangChainAI Loader)
2) Chat with the design in @streamlit 💬 and @OpenAI.
3) 🎨 Design and code is returned

Demo, Code explained & Github Link↓ 

![](https://pbs.twimg.com/media/Fu6og3CaEAANZ0X.jpg) ([View Tweet](https://twitter.com/pwang_szn/status/1652443402892611584))
** 1/ Live Demo: https://t.co/kYcJ9KEefy ([View Tweet](https://twitter.com/pwang_szn/status/1652443436786798593))
** 2/ There are two main files, chatbot[.]py and generateCode[.]py

Let's go over the generateCode[.]py first.

This is the script that generates HTML/CSS code based on the provided Figma designs. 

![](https://pbs.twimg.com/media/Fu6ojgzaUAA3aJq.jpg) ([View Tweet](https://twitter.com/pwang_szn/status/1652443447595528193))
** 3/ We need to first load the Figma design (with the help of Figma File Loader)

✔️ Doc index: helps to organize and search through the Figma data quick.
✔️ Doc retriever: enables efficient retrieval of relevant Figma nodes or metadata 

![](https://pbs.twimg.com/media/Fu6okCAaIAEQuPt.jpg) ([View Tweet](https://twitter.com/pwang_szn/status/1652443455128502272))
** 4/ These are the prompts to generate the code from the Figma designs 👩‍💻 

![](https://pbs.twimg.com/media/Fu6okbQaYAEdFu-.jpg) ([View Tweet](https://twitter.com/pwang_szn/status/1652443461935841280))
** 5/ ⚙️ This is where we are generating the code for the designs.

1) Takes input
2) Fetches relevant Figma nodes
3) Formats the chat prompt to generate HTML/CSS code using GPT-4! 

![](https://pbs.twimg.com/media/Fu6okz8aMAAi6bF.jpg) ([View Tweet](https://twitter.com/pwang_szn/status/1652443469305253888))
** 6/ We generate the code then we save it to the output.html file so that our chatbot can read it. 🌟 

![](https://pbs.twimg.com/media/Fu6olP5akAEVJ4P.jpg) ([View Tweet](https://twitter.com/pwang_szn/status/1652443476586545152))
** 7/ Let's over the chatbot[.]py code now..

This is the Streamlit based chatbot that we use to make changes to the design. 

![](https://pbs.twimg.com/media/Fu6olrfaEAEDo7_.jpg) ([View Tweet](https://twitter.com/pwang_szn/status/1652443486812246016))
** 8/ *Ahem*, not to toot my own horn but...I'm creating a course to help you build AI projects *like this one*! (Release on May 27.)

Check it out now (early bird sale): https://t.co/E6MnEmHqjd ([View Tweet](https://twitter.com/pwang_szn/status/1652443490742329345))
** 9/ 🤖 We write the prompt for the chatbot and setup the @langchain LLMChain here. 

![](https://pbs.twimg.com/media/Fu6omeDaYAEGgtA.jpg) ([View Tweet](https://twitter.com/pwang_szn/status/1652443497474162688))
** 10/ We have some helper functions to generate responses, interact with users and provide code updates! 😎🖋️ 

![](https://pbs.twimg.com/media/Fu6om4KaMAAxcrd.jpg) ([View Tweet](https://twitter.com/pwang_szn/status/1652443504768057344))
** 11/ Update the HTML content and display it in the chat. 🔥 

![](https://pbs.twimg.com/media/Fu6onTcaMAEs0tC.jpg) ([View Tweet](https://twitter.com/pwang_szn/status/1652443512187797504))
** 12/ Github Link: https://t.co/MtgWmbzO1y

Worked together with @peternhwang on this one 🤝 ([View Tweet](https://twitter.com/pwang_szn/status/1652443515069284352))
** 13/ Imo there's a huge opportunity in the design space. 💰

Most backend developers hate doing design (and suck at it, me included..) ([View Tweet](https://twitter.com/pwang_szn/status/1652443517631991808))
** 14/ 👀 What I'm working on next:

Feature to copy design styles from other websites..
(Will release this in a few days!)

Lmk any other possible features! ([View Tweet](https://twitter.com/pwang_szn/status/1652443520148594689))