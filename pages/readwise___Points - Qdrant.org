:PROPERTIES:
:title: readwise/Points - Qdrant
:END:

:PROPERTIES:
:author: [[qdrant.tech]]
:full-title: "Points - Qdrant"
:category: [[articles]]
:url: https://qdrant.tech/documentation/concepts/points/
:image-url: https://qdrant.tech/images/social_preview.png
:END:

* Highlights first synced by [[Readwise]] [[2023-12-18]]
** ðŸ“Œ
#+BEGIN_QUOTE
[](https://qdrant.tech/documentation/concepts/points#points)Points

The points are the central entity that Qdrant operates with. A point is a record consisting of a vector and an optional [payload](https://qdrant.tech/documentation/concepts/points/../payload).

You can search among the points grouped in one [collection](https://qdrant.tech/documentation/concepts/points/../collections) based on vector similarity. This procedure is described in more detail in the [search](https://qdrant.tech/documentation/concepts/points/../search) and [filtering](https://qdrant.tech/documentation/concepts/points/../filtering) sections. 
#+END_QUOTE
    date:: [[2023-07-03]]
*** from _Points - Qdrant_ by qdrant.tech
*** [View Highlight](https://read.readwise.io/read/01h4d9htwz9kf1bsjfex2q7hj1)
** ðŸ“Œ
#+BEGIN_QUOTE
If the logic of your application requires a guarantee that the vector will be available for searching immediately after the API execution, then use the flag `?wait=true`. In this case, the API will return the result only after the operation is finished 
#+END_QUOTE
    date:: [[2023-07-03]]
*** from _Points - Qdrant_ by qdrant.tech
*** [View Highlight](https://read.readwise.io/read/01h4d9nc8ne0zr8x3avvdzncbw)
** ðŸ“Œ
#+BEGIN_QUOTE
Point IDs

Qdrant supports using both `64-bit unsigned integers` and `UUID` as identifiers for points.

Examples of UUID string representations:

â€¢   simple: `936DA01F9ABD4d9d80C702AF85C822A8`
â€¢   hyphenated: `550e8400-e29b-41d4-a716-446655440000`
â€¢   urn: `urn:uuid:F9168C5E-CEB2-4faa-B6BF-329BF39FA1E4`

That means that in every request UUID string could be used instead of numerical id. 
#+END_QUOTE
    date:: [[2023-07-03]]
*** from _Points - Qdrant_ by qdrant.tech
*** [View Highlight](https://read.readwise.io/read/01h4d9qgagc64s37p7wgqjehqr)
** ðŸ“Œ
#+BEGIN_QUOTE
Point IDs

Qdrant supports using both `64-bit unsigned integers` and `UUID` as identifiers for points.

Examples of UUID string representations:

â€¢   simple: `936DA01F9ABD4d9d80C702AF85C822A8`
â€¢   hyphenated: `550e8400-e29b-41d4-a716-446655440000`
â€¢   urn: `urn:uuid:F9168C5E-CEB2-4faa-B6BF-329BF39FA1E4`

That means that in every request UUID string could be used instead of numerical id. 
#+END_QUOTE
    date:: [[2023-07-03]]
*** from _Points - Qdrant_ by qdrant.tech
*** [View Highlight](https://read.readwise.io/read/01h4d9rn998fx1yr32x8s1dqfz)