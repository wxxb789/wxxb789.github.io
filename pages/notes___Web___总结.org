

* 总结

* POST vs GET

** 1. GET


- GET 请求有长度限制,在URL之后。参数会出现在地址栏上，不适合敏感信息
- GET请求应该用于等幂操作(idempotent)，GET请求纯粹取得资源，而不改变服务器上的数据或状态。
  （等幂操作：同一个操作重复多次，传回同样的结果。）
- 若浏览器开启Cache来缓存数据，那么再次GET会从浏览器读取缓存数据。GET在浏览器回退时是无害的，而POST会再次提交请求
- GET在浏览器回退时是无害的，而POST会再次提交请求
- GET 请求可被缓存
- GET 请求保留在浏览器历史记录中
- GET 请求可被收藏为书签
- GET 请求不应在处理敏感数据时使用
- GET 请求只应当用于取回数据
** 2. POST


- 参数在POST请求的HTTP消息主体中
- 用于非等幂操作（non-idempotent）。POST请求发送的数据，可能会影响服务器上的数据状态。
- =<form>=需要指定=method=属性来设定POST或GET，默认GET
- POST 请求不会被缓存
- POST 请求不会保留在浏览器历史记录中
- POST 不能被收藏为书签
- POST 请求对数据长度没有要求
** 3. 对比POST与GET

| 比较             | GET                                                                                                       | POST                                                                                     |
|------------------+-----------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------|
| 可见性           | 数据在 URL 中对所有人都是可见的。                                                                         | 数据不会显示在 URL 中。                                                                  |
| 安全性           | 与 POST 相比，GET 的安全性较差，因为所发送的数据是 URL 的一部分。在发送密码或其他敏感信息时绝不要使用 GET | POST 比 GET 更安全，因为参数不会被保存在浏览器历史或 web 服务器日志中。                  |
| 对数据类型的限制 | 只允许 ASCII 字符。                                                                                       | 没有限制。也允许二进制数据。                                                             |
| 对数据长度的限制 | 是的。当发送数据时，GET 方法向 URL 添加数据；URL 的长度是受限制的（URL 的最大长度是 2048 个字符）。       | 无限制。                                                                                 |
| 历史             | 参数保留在浏览器历史中。                                                                                  | 参数保留在浏览器历史中。                                                                 |
| 编码类型         | =application/x-www-form-urlencoded=                                                                       | =application/x-www-form-urlencoded= 或 =multipart/form-data=。为二进制数据使用多重编码。 |
| 缓存             | 能被缓存                                                                                                  | 不能缓存                                                                                 |
| 书签             | 可收藏为书签                                                                                              | 不可收藏为书签                                                                           |
| 后退按钮/刷新    | 无害                                                                                                      | 数据会被重新提交（浏览器应该告知用户数据会被重新提交）。                                 |