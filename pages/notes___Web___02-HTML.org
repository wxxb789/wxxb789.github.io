

* HTML

前端技术:对于我们javaWeb开发指的就是应用在浏览器的网页上的技术。

*非重点*: (侧重于美工的工作,对于我们能看懂能读懂就行,最好能写出来)

=HTML= =css=

*重点*: (必须完全掌握,且面试基本都涉及到,开发中也会应用到)

=javascript= =ajax= =jQuery=
* HTML简介

超文本标记语言(Hyper Text Markup Language)简称HTML 。
其实我们平时在网上看到的那些网页,就是用HTML编写的,HTML就是用来编辑网页的最基础的语言。
HTML编写的文件(文档)称为HTML文档(HTML页面静态页面)

超文本标记语言,文本我们并不陌生(比如txt，word这都是我们常见的文本),那么什么是超文本呢？就是超出一般文本范围的文本,里面可以有文字、图片、音乐、视频、链接等等。
标记就是标签,因为HTML的内容都是由标签组成的,每个标签都有自己特殊的作用,这些标签会告诉浏览器如何在网页上显示内容。总之HTML就是写给浏览器的语言。

超文本:除了像world txt文档能够编写文字性的内容之外，
还能使用图片、视频、音频、超链接等。 可使用的文本范畴比较广=<>= 标签
:HTML里面全部都是=<>=
* HTML的编辑


1. HTML可以使用简单的文本编辑器来编辑
   如txt文本word文本等,但是必须使用HTML或htm作为文件扩展名，以HTML或htm为扩展名的文件才是HTML文件。=.HTML=或者=.htm=的文档就是HTML文档,而且HTML文件无需编译可直接被浏览器解析。

2. HTML标签多数都是由开始标签和结束标签成对组成的：
   =<标签名 属性名="值" 属性名="值">=内容=</标签名>=
   一般还会在起始标签上设置属性去美化标签所封装的内容;

   其中个别标签只有单一功能或者没有要修饰的内容,所以标签没有内容或者没有结束标签:
   =<标签名/>=

   =属性=是对标签内容起修饰美化作用的，主要通过对对应属性的值进行操作改变达到修饰美化目的。
   属性和值之间用=进行赋值,属性值可以用双引号或单引号进行引用,不做任何引用也可以,但是规范使用双引号进行引用;属性和属性之间用空格隔开。

3. HTML标签对大小写是不敏感的
   如:=<b>=和=<B>=的作用是相同的。但是为了给下一代HTML做好准备,
   万维网联盟 (W3C) 的标准是规范使用小写。
   由上我们可以看出HTML对格式、大小写等的要求都不是很严格,可见它是一门弱类型语言。

   - =<a>= =</a>=
   - =<A>= =</A>=
   - =<a>= =</A>=错误
* HTML文件结构

#+begin_example
  <HTML>根标签有且只有一个
     head标签的内容不做显示效果,即其内容不会显示在浏览器的窗口,其主要作用是
     设置页面的先关信息;
     <head>
        <title>标题</title> 指定整个页面的标题
     </head>
     body可以再嵌入其他多个标签以及文本内容,来构成整个页面内容,即body标签的
     内容才是显示在浏览器的窗口。
     <body>
        正文
     </body>
  </HTML>
#+end_example

最外面是一对HTML标签，此标签起限定范围的作用，就是告诉浏览器HTML标签之间的都是HTML的容。
HTML又被=head=标签和=body=标签分成两部分，=head=标签之间的内容不会在浏览器的文档窗口显示,主要是给HTML页面增加一些辅助或属性信息，并且它里面的内容会最先加载,如=title=标签用来定义HTML文档的标题,它的内容将显示在浏览器窗口的标题栏。
=body=标签是HTML文档的主体部分,其间的内容才是真正显示在网页上的。在=body=体中通常会有很多其它标签,这些标签和标签属性结合起来构成HTML文档的主体部分。

示例1

#+begin_example
  <HTML>
     <head>
       <title>我的第一个HTML</title>
  </head>
  <body>
     这是我的<font color=”red”  size=’6’>第一个</font>网页。
     <!--这是第二行(错了,还是一行,因为HTML的操作只认标签) -->
  <br>
     <!--这才是换行--> 
   <br/>
     <!--这样也能起到换行作用,但是第二个br严谨规范,带有封口-->
     <hr>  <!--水平线-->
     <hr/> <!--水平线也行,但是严谨规范,带有封口-->
  </body>
  </HTML>
  示例2：
  <HTML >
  <head>
  </head>

  <body>
       <font color="#66CCCC" size="4">这是第二个HTML</font>
         <!--color是设置标签的颜色属性,“#FF00FF”是颜色值:
               是由三原色组成的调和色。值是16进制的,用#标识,因为16进制中10~15用字母a~f表示的,所以以便和英文单词的颜色值区分开。
               三原色: 红 #FF0000、 绿#00FF00  、 蓝#0000FF ,所有颜色都是由这三个颜色调和组成的。
               最小值:#000000黑色    最大值:#FFFFFF白色
          -->
       c<dz>a  <!--显示ca,因为HTML标签是由<>标记的,浏览器把<dz>看做了标签,但是不识别所以忽略-->
       2<31. 4 <!--显示的就是2<31. 4,没有把<31. 看做标签,因为标签没有纯数字-->
                    <!--所以<和>在HTML里是特殊字符,必须进行转译:
                      &lt;表示<      &gt;表示>   
               在HTML里敲空格几乎没作用, &nbsp;才表示空格  
               很多记不住,只需在工具中&出现很多,自己找
                      --> 
  </body>
  </HTML>
#+end_example
* HTML标签的操作思想

为了操作数据,都需要用标签对不同数据进行封装,通过标签中的属性对封装的数据进行操作。
标签就相当于一个容器,对容器中的数据进行操作,就是在不断的改变容器的属性值。
* HTML的声明

用工具生成HTML页面,会发现在第一行有:
=<!DOCTYPE HTML PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"  "http://www.w3.org/TR/xHTML1/DTD/xHTML1-transitional.dtd">=

1. =<! DOCTYPE>=不是HTML标签而是声明:它是声明指示Web浏览器按照哪个HTML版本和规则去加载网页页面。
2. =<! DOCTYPE>=声明必须放在HTML文档的第一行,位于=<HTML>=标签之前。
3. DTD：因为HTML4.01以后都是基于SGML(Standard Generalized Markup
   Language标准通用标记语言)的, 所以=<! DOCTYPE>=声明引用DTD(Document
   Type
   Definition文档类型定义=<是一套关于标记符的语法规则>=)。DTD规定了标记语言的规则,这样浏览器才能按照正确的规则呈现内容。

=<! DOCTYPE>=类型有3种:

1. HTML4.01 Strict：
   =<! DOCTYPE HTML PUBLIC “-//W3C//DTD HTML 4.01//EN”  “http://www.w3.org/TR/HTML4/strict.dtd”>=

该DTD包含所有Html元素和属性,但不包括展示性和弃用的元素(比如font);不允许框架集(Framesets)。

2. HTML4.01 Transitional:
   =<! DOCTYPE HTML PUBLIC “-//W3C//DTD HTML 4.01 Transitional//EN” “http://www.w3.org/TR/HTML4/loose.dtd”>=
   该DTD包含所有HTML元素和属性,包含展示性的和弃用的元素(比如font);不允许框架集(Framesets)。

3. HTML 4.01 Frameset:
   =<! DOCTYPE HTML PUBLIC “-//W3C//DTD HTML 4.01 Frameset//EN” “http://www.w3.org/TR/HTML4/frameset.dtd”>=
   该DTD等同于HTML 4.01 Transitional,但允许框架集内容。

=<! DOCTYPE>=中的这些: - http://www.w3.org/TR/HTML4/strict.dtd -
http://www.w3.org/TR/HTML4/loose.dtd -
http://www.w3.org/TR/HTML4/frameset.dtd

就是对应规则文件(.dtd文件)的网址。

如果HTML中没有加=<! DOCTYPE>=,我们会发现HTML也能正常显示,那是因为浏览器自带有默认规则(包容性解析),但是这种规则比较宽松严谨性不强,且由于浏览器兼容性问题,在不同的浏览器中显示的结果也有所区别。所以为了规范严谨性最好还是写上(标准性解析)。
* =<meta/>=标签

=<meta>=标签,也称为元标签。

1. =<meta>=标签的主要作用是提供有关页面的一些元信息(比如搜索引擎关键字、作者、字符集、缓存等等);简单理解就是对网页的描述信息。

2. =<meta>=标签位于=<head>=标签中,不包含任何内容,主要是通过=name=、=http-equiv=属性结合=content=属性定义页面元信息。

3. 对2的具体解释

   通过=name=和=http-equiv=属性的属性值关联页面的元信息。
   通过=content=属性的属性值定义=name=或=http-equiv=属性所关联的元信息。
* 常用元信

A. 关键字: 写给搜索引擎的,如在百度中搜索word1或word2就能搜索到此网页

#+begin_example
  `<meta name=”keywords”  content=”word1,word2”>`
#+end_example

B. 作者:网页作者

#+begin_example
  `<meta name=”author” content=”authorName”>`
#+end_example

C. 描述:对网页内容的简单描述

#+begin_example
  `<meta name=”description” content=”this is my page”>`
#+end_example

D. 版权

#+begin_example
  `<meta name=”copyright” content=”do not use my page”>`
#+end_example

E. 字符编码集:网页支持的文字编码格式 (GB2312、UTF-8等表示支持中文)

#+begin_example
  `<meta http-equiv=”content-type” content=”text/HTML;charset=GB2312”>`
#+end_example

F. 刷新:指示网页多长时间(单位秒)刷新一次,并指示刷新链接到的网址

#+begin_example
  `<meta http-equiv=”refresh”  content=”3;url=http://www.baidu.com”>`
#+end_example

G. =<meta http-equiv=”Pragma” content=”no-cache”>=

#+begin_example
  控制页面的缓存与否:值是pragma允许缓存;值是no-cache禁止浏览器从本地计算机的缓存中访问页面,那么只能从服务器再次访问   (通常为了清理缓存)。
#+end_example

H. =<meta http-equiv=”cache-control” content=”no-cache” >=

#+begin_example
  也是控制页面的缓存与否:值public浏览器和服务器都可缓存页面, 值no-cache不缓存页面(通常为了清理缓存)。
#+end_example

I. 设置网页到期时间(时间GMT格式) (通常为了清理缓存时间设置为0)
=<meta http-equiv=”expires” content=”0”>=

#+begin_quote
  注：如果需要在HTML页面设置不缓存,那么通常在=<head>=标签加入:
  =<meta http-equiv="pragma" content="no-cache">=
  =<meta http-equiv="cache-control" content="no-cache">=
  =<meta http-equiv="expires" content="0">=
#+end_quote

J. 设置cookie有效时间

#+begin_example
  `<meta http-equiv=”set-cookie” content=” Mon,12 May 2001 00:20:00 GMT”>`
#+end_example
* 文字标签

用于处理文字的标签:

- =<font >``</font>=
- =<!--b黑体字体标签-->=
- =<!--u下划线标签-->=
- =<!--i斜体字体标签-->=
- =<!--标题标签  1~6由大到小 且具有自动换行效果-->=
* 区域标签


1. 段落标签 =<p>= 将封装的内容以段落形式展现。具有自动换行效果。
2. 块标签 =<div>= 封装的内容为独立的区域。
   一般通过css+div对页面不同区域进行不同效果美化。
3. =<span>=标签 用来对文档中的行内容进行注释或说明。
* 列表标签


1. 列表标签是以列表的形式显示内容

   列表标签: =<dl>= 上层项目: =<dt>= 下层项目: =<dd>= （有自动缩进功能）

2. 有序列表和无序列表

   有序: =<ol>= 无序: =<ul>=
   有序和无序,条目的封装都用=<li>=,且有自动缩进效果

3. 无序列表

   默认是实心圆区分条目。 =type=属性改变符号样式,用三种样式:
   =disc=实心圆 =circle=空心圆 =square=实心方块

4. 有序列表 默认是以有序的数字排列条目。
   =type=属性改变符号样式,=1=按数字排序、=A=按大写字母排序、
   =a=按小写字母排序 =I=按大写罗马数字排序、=i=按小写罗马数字排序
* 图片标签

在网页中显示图片,使用=img=标签

- =src=属性连接图片路径

- =alt=属性是图片交互文本,当图片加载失败显示信息

- =title=属性是图片说明,当鼠标放到图片上会显示信息

- =height=属性设置图片高度

- =width=属性设置图片宽度

- =border=属性设置图片边框

- =align=属性设置图像相对于周围元素的水平和垂直对齐方式。有5个属性值=left=、=right=、=top=
  、=middle=和=bottom=;

  1. =left= 和 =right=值会把图片转移到周围与其相连的文本相应的水平边界中
  2. =top=、=middle=、=bottom=三个值将图片与其相邻的文字在垂直方向上对齐。

- =top=是图片顶部与文字的顶部对齐。

- =bottom=是图片底部与文字的底部对齐。

- =middle=是图片与文字中央对齐。
* 路径

1.绝对路径:

#+begin_example
  路径是固定、具体、不变的:
  `盘符:\父目录\子目录\子子目录\文件名`
  `F:\class_105_EE\HTML\pages\a.HTML`
#+end_example

2.相对路径:

相对性,一个文件相对另一个文件的路径: 1.
访问文件和被访问文件在同一目录,访问文件可以直接访问被访问文件:

#+begin_example
  ABC目录:
  a.HTML
  b.jpg
  `<img src="b.jpg"/>`
#+end_example

1. 访问文件和被访问文件所在的目录在同一个目录,直接访问:

   ABC目录: a.HTML bbb目录 b.jpg =<img src="bbb/b.jpg"/>=

2. 访问文件所在的目录和被访问文件在同一目录,访问文件就得先返回到和被访问

   文件同一层次位置才可以访问: =../= 就表示返回一层 =../../=返回两层
   ABC目录: aaa目录 a.HTML b.jpg =<img src="../b.jpg"/>=
* 表格标签

表格标签 =<table>= 以表格的形式显示内容

- =border=属性设置边框
- =bordercolor=属性设置边框颜色
- =cellpadding= 单元格内间距(单元格中内容和单元格上下左右的间距)
- =cellspacing=
  单元格外间距(单元格和单元格之间,以及单元格和外边框之间的间距)
- =height= 属性设置表格高度
- =width= 属性设置表格宽度
- =<td>=标签和=<th>=标签都是单元格,但=<th>=中的内容会自动居中并加粗
- =colspan=合并一行的多个单元格
- =rowspan=合并一列的多个单元格
* 超链接标签


1. 链接资源 href属性指定链接资源(及链接地址):
   当href值中未指定通信协议,则默认是file文件协议,及访问的是本地磁盘文件。

#+begin_quote
  链接对应的资源要使用对应的协议。 1. href="a.HTML" 默认的file协议:
  =file:///F:/MyEclipse10.7/Workspaces/Html/WebRoot/HTML/4_超链接标签/a.HTML=
  1. =href="http://www.baidu.com"=\\
  访问一般网站的公共=http协议=: http://www.baidu.com 1.
  =href="thunder://速度与激情7.rmvb"= 访问迅雷资源的=thunder协议=:
  =thunder://速度与激情7.rmvb= 1. =href=mailto:mmy_1222@foxmail.com=
  访问邮箱的=mailto协议=: =mailto:mmy_1222@foxmail.com= 1.
  取消=<a>=标签的默认效果,自定义效果
  =href="javascript:void(0)" onclick="alert('弹出对话框')"=
  =<a>=标签的默认效果使用javascript解析,然后=void(0)=表示默认效果什么都不做,然后
  =onclick="alert('弹')"=给其指定点击事件并弹出一个对话框
#+end_quote

2. 定位标记 (锚)
   注意:跳到指定标记位置,href属性值必须加#,不然默认是访问本地磁盘文件
* 框架

=<frameset>=标签 (HTML框架布局)

作用: 对一个页面进行划分、布局。
注意:=<frameset>=标签不能写在=<body>=标签中,因为=<frameset>=标签本身就表示页面主体
子窗口使用=<frame>=标签。=noresize=属性设置子窗口不可拖动。

- =<a>=标签链接的资源默认会在当前页显示,=target=属性可指定显示位置:
- =_top=:链接会显示在原窗口中，并占满整个浏览器窗口
- =_blank=:打开一个新窗口
- =_parent=:显示在父窗口
- 指定窗口名:在指定名称的frame窗口打开
* 表单标签

表单标签 =<form>= ：主要用于和服务端进行数据交互

表单中又由很多组件组成:

1. =<input>=标签:

用于输入数据,向我们平时看到的文本框、密码框、隐藏框、复选框、单选框、按钮等。
不同的组件通过=<input>=标签的 =type=属性值来区别。

1. 隐藏框: 不需要在页面显示,但却有数据可向服务端提交

2. 单选框定义好,仍无法起到单选作用。
   因为单选框要在一组数据中只选择一个结果。
   所以必须给多个单选框加上相同的=name=值属性,则视为一组,才可起到单选作用。
   =checked=属性设置默认选项。

3. 复选框是在一组数据中同时选择多个。
   同样给多个复选框加上相同的=name=值属性, 则视为一组。\\
   =checked=属性设置默认选项。

4. =submit=按钮是向服务器端提交表单数据的。
   那么服务端怎么来确定这些数据是来自哪个表单哪个标签的
   以及数据内容是什么？
   标签的=name=属性来确定不同标签,=value=属性确定标签数据内容。
   =name=和=value=属性组成键值对。

5. =<select>=标签=下拉框= 每个选择项都用=<option>=标签标记
   所有的选项也是一组数据,在=<select>=标签上使用name属性确定一组数据,
   每个选项对应不同的值,所以在每个=<option>=标签上使用value属性确定每个选项数据内容
   =selected=属性是默认选项

6. 文本域：输入多内容数据
   使用=rows=和=cols=属性设置文本域大小,=rows=是行,=cols=是列

=<from>=表单主要是跟服务端进行数据的交互,那么表单数据提交给服务端总的指定
提交位置, =action=属性就是指定表单数据提交位置的。
=method=属性指定数据提交的方式: =get=(默认)、=post=。
* 提交方式

** 1. get和post提交方式的区别


1. =get=提交,数据信息显示在地址栏

   =post=提交,不显示

2. =get=提交,不安全,因为数据在地址栏都可以看见

   =post=提交安全,看不见提交数据

3. =get=提交,提交不了大数据,因为地址栏空间有限

   =post=提交,可以提交大数据

4. =get=提交,将数据信息封装到了请求消息的请求行中,可见的

   =post=提交,将数据信息封装到了请求消息的请求体中,不可见
** 2. get和post提交方式在服务端的区别

如果出现将中文数据提交到服务器,服务器会默认使用=iso8859-1=编码格式进行
解码会出现乱码,所以先使用=iso8859-1=进行编码拿到中文数据的原码,再使用
指定的编码格式对中文数据进行解码即可。对=get=和=post=方式都使用。

但是对于=post=方式提交的中文数据还有另一种解决方式,就是使用服务端的=request=对象
的=setCharacterEncoding=方法直接设置指定的中文编码格式就能将中文数据解码出来。

和服务端进行数据交互的3中方式：

1. 地址栏输入=url=地址。 get方式
2. 超连接=<a>=标签。 get方式
3. =<form>=表单。 get和post方式
* 其它标签


- =<body>=标签的 =bgcolor=属性设置背景色
- =<sup>=上标标签
- =<sub>=下标标签
- =<pre>=原样显示标签
- =<center>=居中标签
- =<marquee>=走马灯，=direction=属性设置方向，=scrollamount=属性设置速度。